package org.example;

import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;
import org.omg.Messaging.SyncScopeHelper;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.util.*;


public class ServiceRecycleContractStandalone {
    public static void main(String[] args) {
        try {
            String currentDir = System.getProperty("user.dir");

            // Carica il file di properties
            Properties properties = new Properties();
            FileInputStream input = new FileInputStream(currentDir + "/" + args[1]);
            properties.load(input);
            input.close();

            //Analizza il file contracts

            Scanner scanner = new Scanner(new File(currentDir + "/" + args[0]));

            List<String> contracts = new ArrayList<>();

            // Legge il contenuto del file
            while (scanner.hasNextLine()) {
                contracts.add(scanner.next());
            }

            scanner.close();

            String url = "";

            //genera in output file contenente la response
            BufferedWriter writer = new BufferedWriter(new FileWriter(currentDir + "/" + args[2]));

            if(!properties.getProperty("endpoint").isEmpty()){ //controlla se la property di un endpoint esiste
                for (String contract : contracts) {

                    url = properties.getProperty("endpoint");//prende la property di un endpoint

                    System.out.println(contract);
                    String contractCorrelationId = contract.substring(0, contract.length() - 19);
                    String userCode = contract.substring(37, contract.length() - 11);
                    String contractNumber = contract.substring(45);

                    JSONObject manageUserDto = new JSONObject();
                    manageUserDto.put("userCode", userCode);

                    // URL del servizio REST
                    url = URL.urlRecycleContracts(url, contractCorrelationId);

                    String response = postRequest(url, manageUserDto);
                    writer.write(contractCorrelationId + "; " + userCode + "; " + contractNumber + "; " + response +"\n");
                }
                writer.close();
                System.out.println("Il file contenente la risposta è stato generato nella seguente directory: " + currentDir);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    // Metodo per inviare una richiesta POST a un servizio REST
    private static String postRequest(String url, JSONObject jsonObject) throws Exception {
        CloseableHttpClient httpClient = HttpClients.createDefault();
        HttpPost httpPost = new HttpPost(url);

        // Imposta l'entità della richiesta con l'oggetto JSON
        StringEntity entity = new StringEntity(jsonObject.toString());
        httpPost.setEntity(entity);
        httpPost.setHeader("Accept", "application/json");
        httpPost.setHeader("Content-type", "application/json");

        // Esegue la richiesta e ottiene la risposta
        CloseableHttpResponse response = httpClient.execute(httpPost);

        // Legge il corpo della risposta
        HttpEntity responseEntity = response.getEntity();
        String status = "";
        if(String.valueOf(response.getStatusLine().getStatusCode()).startsWith("2")){
            status = "OK";
        }
        else if(String.valueOf(response.getStatusLine().getStatusCode()).startsWith("3")){
            status = "Multiple Choices";
        }
        else if(String.valueOf(response.getStatusLine().getStatusCode()).startsWith("4")) {
            status = "Client Error";
        }
        else if(String.valueOf(response.getStatusLine().getStatusCode()).startsWith("5")){
            status = "Server Error";
        }

        String responseBody = status + " - " + EntityUtils.toString(responseEntity);

        // Chiude le risorse
        EntityUtils.consume(responseEntity);
        response.close();
        httpClient.close();

        return responseBody;
    }
}